From 14065eb58f3af9f3dc8e9f7bf451030cbf3c59ea Mon Sep 17 00:00:00 2001
From: maurerr <mariusd84@gmail.com>
Date: Tue, 29 Jan 2019 18:24:21 +0100
Subject: [PATCH] define trunc and round functions

---
 source/i18n/decimfmt.cpp               | 11 ++++++++++-
 source/i18n/number_decimalquantity.cpp |  9 ++++++++-
 2 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/source/i18n/decimfmt.cpp b/source/i18n/decimfmt.cpp
index edd8910..91f66bf 100644
--- a/source/i18n/decimfmt.cpp
+++ b/source/i18n/decimfmt.cpp
@@ -39,6 +39,15 @@ using EPadPosition = icu::DecimalFormat::EPadPosition;
 #define UBOOL_TO_BOOL(b) b
 #endif
 
+#define std_trunc    ftrunc
+
+double ftrunc(double x) {
+	if(x >= 0)
+		return floor(x);
+	else
+		return ceil(x);
+}
+
 
 UOBJECT_DEFINE_RTTI_IMPLEMENTATION(DecimalFormat)
 
@@ -1349,7 +1358,7 @@ bool DecimalFormat::fastFormatDouble(double input, UnicodeString& output) const
         return false;
     }
     if (std::isnan(input)
-            || std::trunc(input) != input
+            || std_trunc(input) != input
             || input <= INT32_MIN
             || input > INT32_MAX) {
         return false;
diff --git a/source/i18n/number_decimalquantity.cpp b/source/i18n/number_decimalquantity.cpp
index 2c4182b..12eff8b 100644
--- a/source/i18n/number_decimalquantity.cpp
+++ b/source/i18n/number_decimalquantity.cpp
@@ -28,6 +28,13 @@ using namespace icu::number::impl;
 using icu::double_conversion::DoubleToStringConverter;
 using icu::double_conversion::StringToDoubleConverter;
 
+#define std_round fround
+
+double fround( double value )
+  {
+  return floor( value + 0.5 );
+  }
+
 namespace {
 
 int8_t NEGATIVE_FLAG = 1;
@@ -432,7 +439,7 @@ void DecimalQuantity::_setToDoubleFast(double n) {
         for (; i <= -22; i += 22) n /= 1e22;
         n /= DOUBLE_MULTIPLIERS[-i];
     }
-    auto result = static_cast<int64_t>(std::round(n));
+    auto result = static_cast<int64_t>(std_round(n));
     if (result != 0) {
         _setToLong(result);
         scale -= fracLength;
-- 
2.11.0

