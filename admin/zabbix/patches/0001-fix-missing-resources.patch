From 7c8f400e2b3f0a54b020bebe3bf19894625d54e2 Mon Sep 17 00:00:00 2001
From: maurerr <mariusd84@gmail.com>
Date: Fri, 8 Feb 2019 14:29:09 +0100
Subject: [PATCH] fix missing resources

---
 src/libs/zbxsysinfo/common/net.c | 18 ++++++++++++------
 1 file changed, 12 insertions(+), 6 deletions(-)

diff --git a/src/libs/zbxsysinfo/common/net.c b/src/libs/zbxsysinfo/common/net.c
index d3ea302..827a323 100644
--- a/src/libs/zbxsysinfo/common/net.c
+++ b/src/libs/zbxsysinfo/common/net.c
@@ -31,6 +31,7 @@
 #	pragma comment(lib, "Dnsapi.lib") /* add the library for DnsQuery function */
 #endif
 
+
 int	tcp_expect(const char *host, unsigned short port, int timeout, const char *request,
 		int (*validate_func)(const char *), const char *sendtoclose, int *value_int)
 {
@@ -188,7 +189,7 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 	char			*ip, zone[MAX_STRING_LEN], buffer[MAX_STRING_LEN], *zone_str, *param;
 	struct in_addr		inaddr;
 #ifndef _WINDOWS
-#if defined(HAVE_RES_NINIT) && !defined(_AIX)
+#if defined(HAVE_RES_NINIT) && !defined(_AIX) && !defined(__UCLIBC__)
 	/* It seems that on some AIX systems with no updates installed res_ninit() can */
 	/* corrupt stack (see ZBX-14559). Use res_init() on AIX. */
 	struct __res_state	res_state_local;
@@ -471,7 +472,7 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 		pDnsRecord = pDnsRecord->pNext;
 	}
 #else	/* not _WINDOWS */
-#if defined(HAVE_RES_NINIT) && !defined(_AIX)
+#if defined(HAVE_RES_NINIT) && !defined(_AIX) && !defined(__UCLIBC__) 
 	memset(&res_state_local, 0, sizeof(res_state_local));
 	if (-1 == res_ninit(&res_state_local))	/* initialize always, settings might have changed */
 #else
@@ -482,7 +483,7 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 		return SYSINFO_RET_FAIL;
 	}
 
-#if defined(HAVE_RES_NINIT) && !defined(_AIX)
+#if defined(HAVE_RES_NINIT) && !defined(_AIX) && !defined(__UCLIBC__)
 	if (-1 == (res = res_nmkquery(&res_state_local, QUERY, zone, C_IN, type, NULL, 0, NULL, buf, sizeof(buf))))
 #else
 	if (-1 == (res = res_mkquery(QUERY, zone, C_IN, type, NULL, 0, NULL, buf, sizeof(buf))))
@@ -500,7 +501,7 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 			return SYSINFO_RET_FAIL;
 		}
 
-#if defined(HAVE_RES_NINIT) && !defined(_AIX)
+#if defined(HAVE_RES_NINIT) && !defined(_AIX) && !defined(__UCLIBC__)
 		res_state_local.nsaddr_list[0].sin_addr = inaddr;
 		res_state_local.nsaddr_list[0].sin_family = AF_INET;
 		res_state_local.nsaddr_list[0].sin_port = htons(ZBX_DEFAULT_DNS_PORT);
@@ -516,7 +517,7 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 #endif
 	}
 
-#if defined(HAVE_RES_NINIT) && !defined(_AIX)
+#if defined(HAVE_RES_NINIT) && !defined(_AIX) && !defined(__UCLIBC__)
 	if (0 != use_tcp)
 		res_state_local.options |= RES_USEVC;
 
@@ -539,8 +540,13 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 
 	_res.retrans = retrans;
 	_res.retry = retry;
-
+        
+#	if !defined(__UCLIBC__)
 	res = res_send(buf, res, answer.buffer, sizeof(answer.buffer));
+#	else
+	if (-1 == (res = res_query(zone, C_IN, type, answer.buffer, sizeof(answer.buffer))))
+		return SYSINFO_RET_FAIL;
+	#endif
 
 	_res.options = saved_options;
 	_res.retrans = saved_retrans;
-- 
2.11.0

