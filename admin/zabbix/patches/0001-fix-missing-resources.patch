From e2a65a43353b3e259ec9b6fc5db1eaa202cf8866 Mon Sep 17 00:00:00 2001
From: maurerr <mariusd84@gmail.com>
Date: Sat, 22 Jun 2019 17:30:15 +0200
Subject: [PATCH] two

---
 src/libs/zbxsysinfo/common/net.c | 21 +++++++++++++--------
 1 file changed, 13 insertions(+), 8 deletions(-)

diff --git a/src/libs/zbxsysinfo/common/net.c b/src/libs/zbxsysinfo/common/net.c
index 7904ca7..4ff152e 100644
--- a/src/libs/zbxsysinfo/common/net.c
+++ b/src/libs/zbxsysinfo/common/net.c
@@ -218,7 +218,7 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 	struct in_addr		inaddr;
 	struct in6_addr		in6addr;
 #ifndef _WINDOWS
-#if defined(HAVE_RES_NINIT) && !defined(_AIX)
+#if defined(HAVE_RES_NINIT) && !defined(__UCLIBC__)
 	/* It seems that on some AIX systems with no updates installed res_ninit() can */
 	/* corrupt stack (see ZBX-14559). Use res_init() on AIX. */
 	struct __res_state	res_state_local;
@@ -536,7 +536,7 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 		*buffer = '\0';
 	}
 #else	/* not _WINDOWS */
-#if defined(HAVE_RES_NINIT) && !defined(_AIX)
+#if defined(HAVE_RES_NINIT) && !defined(__UCLIBC__)
 	memset(&res_state_local, 0, sizeof(res_state_local));
 	if (-1 == res_ninit(&res_state_local))	/* initialize always, settings might have changed */
 #else
@@ -547,7 +547,7 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 		return SYSINFO_RET_FAIL;
 	}
 
-#if defined(HAVE_RES_NINIT) && !defined(_AIX)
+#if defined(HAVE_RES_NINIT) && !defined(__UCLIBC__)
 	if (-1 == (res = res_nmkquery(&res_state_local, QUERY, zone, C_IN, type, NULL, 0, NULL, buf, sizeof(buf))))
 #else
 	if (-1 == (res = res_mkquery(QUERY, zone, C_IN, type, NULL, 0, NULL, buf, sizeof(buf))))
@@ -565,7 +565,7 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 			return SYSINFO_RET_FAIL;
 		}
 
-#if defined(HAVE_RES_NINIT) && !defined(_AIX)
+#if defined(HAVE_RES_NINIT) && !defined(__UCLIBC__)
 		res_state_local.nsaddr_list[0].sin_addr = inaddr;
 		res_state_local.nsaddr_list[0].sin_family = AF_INET;
 		res_state_local.nsaddr_list[0].sin_port = htons(ZBX_DEFAULT_DNS_PORT);
@@ -595,7 +595,7 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 		sockaddrin6.sin6_family = AF_INET6;
 		sockaddrin6.sin6_addr = in6addr;
 		sockaddrin6.sin6_port = htons(ZBX_DEFAULT_DNS_PORT);
-#if defined(HAVE_RES_NINIT) && !defined(_AIX) && (defined(HAVE_RES_U_EXT) || defined(HAVE_RES_U_EXT_EXT))
+#if defined(HAVE_RES_NINIT) && !defined(__UCLIBC__) && (defined(HAVE_RES_U_EXT) || defined(HAVE_RES_U_EXT_EXT))
 		memset(&res_state_local.nsaddr_list[0], '\0', sizeof(res_state_local.nsaddr_list[0]));
 #		ifdef HAVE_RES_U_EXT			/* Linux */
 		saved_ns6 = res_state_local._u._ext.nsaddrs[0];
@@ -633,10 +633,10 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 		memcpy(&saved_ns6, &(_res._ext.ext.nsaddrs[0]), sizeof(saved_ns6));
 		memcpy(&_res._ext.ext.nsaddrs[0], &sockaddrin6, sizeof(sockaddrin6));
 #		endif /* #if defined(HAVE_RES_U_EXT) */
-#endif /* #if defined(HAVE_RES_NINIT) && !defined(_AIX) && (defined(HAVE_RES_U_EXT) || defined(HAVE_RES_U_EXT_EXT)) */
+#endif /* #if defined(HAVE_RES_NINIT) && !defined(__UCLIBC__) && (defined(HAVE_RES_U_EXT) || defined(HAVE_RES_U_EXT_EXT)) */
 	}
 
-#if defined(HAVE_RES_NINIT) && !defined(_AIX) && (defined(HAVE_RES_U_EXT) || defined(HAVE_RES_U_EXT_EXT))
+#if defined(HAVE_RES_NINIT) && !defined(__UCLIBC__) && (defined(HAVE_RES_U_EXT) || defined(HAVE_RES_U_EXT_EXT))
 	if (0 != use_tcp)
 		res_state_local.options |= RES_USEVC;
 
@@ -665,7 +665,12 @@ static int	dns_query(AGENT_REQUEST *request, AGENT_RESULT *result, int short_ans
 	_res.retrans = retrans;
 	_res.retry = retry;
 
-	res = res_send(buf, res, answer.buffer, sizeof(answer.buffer));
+#      if !defined(__UCLIBC__)
+        res = res_send(buf, res, answer.buffer, sizeof(answer.buffer));
+#      else
+       if (-1 == (res = res_query(zone, C_IN, type, answer.buffer, sizeof(answer.buffer))))
+              return SYSINFO_RET_FAIL;
+#       endif
 
 	_res.options = saved_options;
 	_res.retrans = saved_retrans;
-- 
2.11.0

